class Stats {
  Random rand = new Random();
  Scanner in = new Scanner(System.in);
  String name;
  int maxHealth;
  int currentHealth;
  int defence;
  int attack;
  
  public Stats(String n, int mh, int d, int a) {
    name = n;
    maxHealth = mh;
    currentHealth = maxHealth;
    defence = d;
    attack = a;
  }

public String getName(){
  return name;
}
  
  public int getMaxHealth() {
    return maxHealth;
  }

  public int getCurrentHealth() {
    return currentHealth;
  }
  
  public int getDefence() {
    return defence;
  }

  public int getAttack() {
    return attack;
  }

  public int attack() {
    int max = (int)(attack * 1.2);
    int min = (int)(attack * 0.8);
    if (rand.nextInt(20) == 0) {
      System.out.print("Critical Hit!");
      return 2*(rand.nextInt(max - min) + min);
    }
    else {
      return rand.nextInt(max - min) + min;
    }
  }
  
  public void damaged(int d) {
    int damage = d;
    if (damage > defence) { 
      System.out.println(getName()+" takes "+(damage-defence)+" damage!");
      currentHealth -= (damage - defence);
    }
    else{
      System.out.println(getName()+" takes no damage!");
    }
  }
}

//Graphics 1, failed
import java.awt.Graphics2D;
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        Graphics2D gfx = (Graphics2D)jPanel1.getGraphics();
        gfx.drawGraphic(0,0,10,10);
        //Every tile is 10 x 10 units
 
    }  

//Graphics 2, succeeded
//Includes working action
public class GameUI extends javax.swing.JFrame {
    Graphics g;
    Action UpAction;
    /**
     * Creates new form GameUI
     */
    public GameUI() {
        initComponents();
        
        //Setting Graphics
        g = jPanel1.getGraphics();
        jPanel1.paintComponents(g);
        
        //Creating Key Binds
        UpAction = new UpAction();
        
        jPanel1.getInputMap().put(KeyStroke.getKeyStroke("UP"), "upAction");
        jPanel1.getActionMap().put("upAction", UpAction);
        
    }
    public class UpAction extends AbstractAction{
        
        @Override
        public void actionPerformed(ActionEvent e){
            g.drawRect(0,0,10,20);
        }
    }

//Translating Positions on 2D array
class Main {
public static void main(String[] args){
  int coord = 0;
  int[][] map = new int[20][20];
  for (int row = 0; row < map.length; row++)
  {
	  for (int col = 0; col < map[row].length; col++)
    {
      	map[row][col] = coord;
        coord += 10;
    }
  }
  int test;
  System.out.println(map[5][10]);
  test = map[5][10]%200;
  System.out.println(test + " Is X");
  test = (map[5][10] - test)/20;
  System.out.println(test + " Is Y");
  
}
}
